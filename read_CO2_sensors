/* 
Main Arduino code for I2C communication with the senseair K30 fr CO2 sensor(s)
*/

/*
#include "LocalFile.h" // double quotes: the folder of this file (DAC_CO2_sensor) is searched for specified file
                       // then the libraries path is searched if not found
#include <LocalFile.h> // the libraries paths searched for the file
*/
#include <read_CO2.h> // CO2 Reading library

/* 
Each CO2 device needs a unique address
to change an I2C address:
  in the code, specify unique I2C address for each IC/device
  per device: write value to EEPROM and power down, then power it up again
*/
const byte co2OneAddress = 0x68; // default/standard
const byte co2TwoAddress = 0x69; // ??

int co2_1 = 0;
int rc_1 = 1;

int co2_2 = 0;
int rc_2 = 1;

int count;

// Define the calls within the .h module for getting CO2 data from each device
read_CO2 READ_CO2_1 = read_CO2(co2OneAddress);
read_CO2 READ_CO2_2 = read_CO2(co2TwoAddress);

// setup code, runs once at beginning
void setup() {
  Serial.begin(9600); // baud rate 9600: may be different for diff computers
}

// void function returns no value, int returns an integer ppm
int read_co2_1(){
  rc_1 = READ_CO2_1.readCO2(co2_1);
  count = 0;
  while ((rc_1 != 0) && (count <= 5)){ // error check, repeats until correct
    rc_1 = READ_CO2_1.readCO2(co2_1);
    count++;
  }
  if (count == 6){
    return 0
  }
  else {
    return co2_1;
  }
}

int read_co2_2(){
  rc_2 = READ_CO2_1.readCO2(co2_2);
  count = 0;
  while ((rc_2 != 0) && (count <= 5)){ // error check, repeats until correct
    rc_2 = READ_CO2_1.readCO2(co2_2);
    count++;
  }
  if (count == 6){
    return 0
  }
  else {
    return co2_2;
  }
}

void loop() {
  co2_1 = read_co2_1();
  Serial.print("CO2 1 reading: ");
  Serial.print(co2_1);
  Serial.println(" ppm");
  /*
  co2_2 = read_co2_2();
  Serial.print("CO2 2 reading: ");
  Serial.print(co2_2);
  Serial.println(" ppm");
  Serial.println();
  */
  delay(100);co2_1 = read_co2_1();
  if (co2_1 != 0){
    Serial.print("CO2 1 reading: ");
    Serial.print(co2_1);
    Serial.println(" ppm");
  }
  else{
    Serial.println("ERROR with CO2 Sensor 1");
  }
  
  /*
  co2_2 = read_co2_2();
  if (co2_2 != 0){
    Serial.print("CO2 2 reading: ");
    Serial.print(co2_1);
    Serial.println(" ppm");
  }
  else{
    Serial.println("ERROR with CO2 Sensor 2");
  */
  delay(100);
}
